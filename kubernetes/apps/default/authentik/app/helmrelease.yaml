---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/source.toolkit.fluxcd.io/ocirepository_v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: OCIRepository
metadata:
  name: authentik
spec:
  interval: 5m
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: 2025.6.3
  url: oci://ghcr.io/goauthentik/helm-charts/authentik
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authentik
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: authentik
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    global:
      image:
        tag: 2025.6.4

    authentik:
      secret_key: env://AUTHENTIK_SECRET_KEY
      postgresql:
        host: file:///postgres-creds/host
        port: file:///postgres-creds/port
        user: file:///postgres-creds/username
        password: file:///postgres-creds/password
        name: file:///postgres-creds/dbname

    server:
      envFrom: &secretEnv
        - secretRef:
            name: authentik-1p-secret
      volumes: &pgVol
        - name: postgres-creds
          secret:
            secretName: authentik-postgres-credentials
      volumeMounts: &pgVolMount
        - name: postgres-creds
          mountPath: /postgres-creds
          readOnly: true
      route:
        main:
          enabled: true
          hostnames: [sso.hayden.moe]
          parentRefs:
            - name: external
              namespace: kube-system
              sectionName: https

    worker:
      envFrom: *secretEnv
      volumes: *pgVol
      volumeMounts: *pgVolMount

    redis:
      enabled: true

    prometheus:
      rules:
        enabled: true
